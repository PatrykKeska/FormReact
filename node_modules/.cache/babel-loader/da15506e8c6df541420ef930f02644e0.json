{"ast":null,"code":"import _defineProperty from \"/Users/patrykkeska/Documents/WebDev/ReactOdPodstaw/Projects/formularz-walidacja/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/patrykkeska/Documents/WebDev/ReactOdPodstaw/Projects/formularz-walidacja/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/patrykkeska/Documents/WebDev/ReactOdPodstaw/Projects/formularz-walidacja/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/patrykkeska/Documents/WebDev/ReactOdPodstaw/Projects/formularz-walidacja/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/patrykkeska/Documents/WebDev/ReactOdPodstaw/Projects/formularz-walidacja/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/patrykkeska/Documents/WebDev/ReactOdPodstaw/Projects/formularz-walidacja/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/patrykkeska/Documents/WebDev/ReactOdPodstaw/Projects/formularz-walidacja/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      username: '',\n      email: '',\n      password: '',\n      checked: false,\n      errors: {\n        username: false,\n        email: false,\n        password: false,\n        checked: false\n      }\n    };\n    _this.messages = {\n      username_incorrect: \"name has to contain minimum  8 characters\",\n      email_incorrect: \"email has to contain @\",\n      password_incorrect: \"password has to be longer than 6 characters \",\n      checked_incorrect: \"checked is not confirmed \"\n    };\n\n    _this.handleChange = function (e) {\n      var type = e.target.type;\n      var name = e.target.name;\n      var value = e.target.value;\n\n      if (type === \"text\" || type === \"email\" || type === \"password\") {\n        _this.setState(_defineProperty({}, name, value));\n      } else if (type === \"checkbox\") {\n        var checked = e.target.checked;\n\n        _this.setState(_defineProperty({}, name, checked));\n      }\n    };\n\n    _this.handleSumbit = function (e) {\n      e.preventDefault();\n\n      var validate = _this.handleValidate();\n\n      if (validate.validationCorrect) {\n        _this.setState({\n          username: '',\n          email: '',\n          password: '',\n          checked: false,\n          errors: {\n            username: false,\n            email: false,\n            password: false,\n            checked: false\n          }\n        });\n      } else {\n        _this.setState({\n          errors: {\n            username: !validate.username,\n            email: !validate.email,\n            password: !validate.password,\n            checked: !validate.checked\n          }\n        });\n      }\n    };\n\n    _this.handleValidate = function () {\n      var username = false;\n      var email = false;\n      var password = false;\n      var checked = false;\n      var validationCorrect = false;\n\n      if (_this.state.username.length >= 8 && _this.state.username.indexOf(' ') === -1) {\n        username = true;\n      }\n\n      if (_this.state.email.indexOf('@') !== -1) {\n        email = true;\n      }\n\n      if (_this.state.password.length >= 6 && _this.state.password.indexOf(' ') === -1) {\n        password = true;\n      }\n\n      if (_this.state.checked) {\n        checked = true;\n      }\n\n      if (username && email && password && checked) {\n        validationCorrect = true;\n      }\n\n      return {\n        username: username,\n        email: email,\n        password: password,\n        checked: checked,\n        validationCorrect: validationCorrect\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state$errors = this.state.errors,\n          username = _this$state$errors.username,\n          email = _this$state$errors.email,\n          password = _this$state$errors.password,\n          checked = _this$state$errors.checked;\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSumbit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Name:\", React.createElement(\"input\", {\n        type: \"text\",\n        id: \"user\",\n        name: \"username\",\n        value: this.state.username,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      })), username && React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, this.messages.username_incorrect), React.createElement(\"label\", {\n        htmlFor: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Email adress:\", React.createElement(\"input\", {\n        noValidate: true,\n        type: \"email\",\n        id: \"email\",\n        name: \"email\",\n        value: this.state.email,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      })), email && React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, this.messages.email_incorrect), React.createElement(\"label\", {\n        htmlFor: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"Password:\", React.createElement(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        name: \"password\",\n        value: this.state.password,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      })), password && React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, this.messages.password_incorrect), React.createElement(\"label\", {\n        htmlFor: \"checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"checkbox\",\n        name: \"checked\",\n        checked: this.state.checked,\n        value: this.state.checked,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }), \"Confirm that you accept terms and conditions\"), checked && React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, this.messages.checked_incorrect), React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"Send\")));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/patrykkeska/Documents/WebDev/ReactOdPodstaw/Projects/formularz-walidacja/src/App.js"],"names":["React","Component","App","state","username","email","password","checked","errors","messages","username_incorrect","email_incorrect","password_incorrect","checked_incorrect","handleChange","e","type","target","name","value","setState","handleSumbit","preventDefault","validate","handleValidate","validationCorrect","length","indexOf"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n\n  state = {\n\n    username: '',\n    email: '',\n    password: '',\n    checked: false,\n\n    errors: {\n      username: false,\n      email: false,\n      password: false,\n      checked: false,\n    },\n  }\n\n  messages = {\n    username_incorrect: \"name has to contain minimum  8 characters\",\n    email_incorrect: \"email has to contain @\",\n    password_incorrect: \"password has to be longer than 6 characters \",\n    checked_incorrect: \"checked is not confirmed \",\n  }\n\n  handleChange = (e) => {\n\n    const type = e.target.type;\n    const name = e.target.name;\n    const value = e.target.value;\n\n    if (type === \"text\" || type === \"email\" || type === \"password\") {\n      this.setState({\n        [name]: value\n      })\n\n    } else if (type === \"checkbox\") {\n      const checked = e.target.checked\n      this.setState({\n        [name]: checked,\n      })\n    }\n  }\n\n  handleSumbit = (e) => {\n    e.preventDefault();\n    const validate = this.handleValidate();\n\n    if (validate.validationCorrect) {\n      this.setState({\n        username: '',\n        email: '',\n        password: '',\n        checked: false,\n\n        errors: {\n          username: false,\n          email: false,\n          password: false,\n          checked: false,\n        },\n      })\n    } else {\n      this.setState({\n        errors: {\n          username: !validate.username,\n          email: !validate.email,\n          password: !validate.password,\n          checked: !validate.checked,\n        },\n      })\n\n    }\n  }\n\n  handleValidate = () => {\n    let username = false;\n    let email = false;\n    let password = false;\n    let checked = false;\n    let validationCorrect = false;\n\n    if (this.state.username.length >= 8 && this.state.username.indexOf(' ') === -1) {\n      username = true;\n    }\n\n    if (this.state.email.indexOf('@') !== -1) {\n      email = true;\n    }\n\n    if (this.state.password.length >= 6 && this.state.password.indexOf(' ') === -1) {\n      password = true;\n    }\n\n    if (this.state.checked) {\n      checked = true;\n    }\n\n    if (username && email && password && checked) {\n      validationCorrect = true;\n    }\n    return ({\n      username,\n      email,\n      password,\n      checked,\n      validationCorrect,\n    })\n\n  }\n\n\n\n\n  render() {\n\n    const { username, email, password, checked } = this.state.errors;\n\n\n    return (\n      <div className=\"App\">\n        <form onSubmit={this.handleSumbit}>\n          <label htmlFor=\"user\">Name:\n            <input type=\"text\" id=\"user\" name=\"username\" value={this.state.username} onChange={this.handleChange} />\n          </label>\n          {username && <span>{this.messages.username_incorrect}</span>}\n\n\n\n          <label htmlFor=\"email\">Email adress:\n            <input noValidate type=\"email\" id=\"email\" name=\"email\" value={this.state.email} onChange={this.handleChange} />\n          </label>\n          {email && <span>{this.messages.email_incorrect}</span>}\n\n\n\n          <label htmlFor=\"password\">Password:\n            <input type=\"password\" id=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\n          </label>\n          {password && <span>{this.messages.password_incorrect}</span>}\n\n          <label htmlFor=\"checkbox\">\n            <input type=\"checkbox\" id=\"checkbox\" name=\"checked\" checked={this.state.checked} value={this.state.checked} onChange={this.handleChange} />\n            Confirm that you accept terms and conditions</label>\n          {checked && <span>{this.messages.checked_incorrect}</span>}\n          <button>Send</button>\n        </form>\n\n\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}